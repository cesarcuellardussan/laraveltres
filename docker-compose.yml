services:
  database:
    image: mysql:5.7 # imagen de docker hub
    container_name: mysql # nombre de referencia del servicio
    restart: unless-stopped # si tiene algun problema, reinicialo
    tty: true # aqui si le fallo joven xD, leo los comentarios
    ports: 
      - "33065:3306" # puerto local:puerto del servicio
    volumes:
      - ./mysql:/var/lib/mysql # carpeta local:carpeta de config de mysql
    environment: # datos de configuracion del entorno
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    networks:
      exercise_networki:
        ipv4_address: 11.168.100.100 
  nginx: # 1er servicio: nginx
    image: nginx # imagen de docker hub que vamos a usar
    container_name: nginx # nombre para referirse al servicio
    ports:
      - "80:80" # puerto de mi pc:puerto del servicio
    volumes:
      - ./alegra:/var/www/html # carpeta local/ vincula a carpeta de nginx
      # - ./alegra:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # archivo local / reflejado en archivo de la imagen
    depends_on: # para correr este servicio debe estar corriendo php y mysql antes
      - php
      - database
    networks:
      exercise_networki:
        ipv4_address: 11.168.100.101  
  php: # 3er servicio
    build: # este se construira aqui mismo
      context: . # ruta de referencia ./
      dockerfile: Dockerfile # nombre del archivo de configuracion de la imagen 
    container_name: php #
    volumes: # carpeta de proyecto local : carpeta del container que da vida a los archivos PHP
      - ./alegra:/var/www/html
    links:
      - database
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=database" 
    ports:
      - "9000:80" # ya te la sabes
    networks:
      exercise_networki:
        ipv4_address: 11.168.100.102

networks:
  exercise_networki:
    ipam:
      driver: default
      config:
        - subnet: "11.168.100.0/24"
volumes:
  db_data: